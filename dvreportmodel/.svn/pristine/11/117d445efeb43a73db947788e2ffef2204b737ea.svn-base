<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="2.0"
	xmlns:xsl="http://www.w3.org/1999/XSL/Transform" xmlns:dvr="http://www.ibm.com/csi/npm/dvreportermodel"
	xmlns:tns="http://www.ibm.com/csi/npm/dashjson" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">

	<xsl:template match="dvr:reporter">
		<tns:Dashboard xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
			xsi:schemaLocation="http://www.ibm.com/csi/npm/dashjson file://D:/TNPM/Code/dv2015_ws/DVXSL/resources/DashJSON.xsd">
			<tns:id>Dashboard1</tns:id>
			<tns:title>Dashboard1</tns:title>							
			<tns:description>Dashboard1 Details</tns:description>
			<tns:totalrows>2</tns:totalrows>
			<tns:totalcols>2</tns:totalcols>
			<xsl:for-each select="dvr:ReportWidget/dvr:dataStoreUrl">
				<tns:stores>
					<tns:name>	<xsl:value-of select="."></xsl:value-of> <!-- TO DO should come from widgets -->
					</tns:name>
				</tns:stores>
			</xsl:for-each>
			<tns:filterbar>
				<tns:drilldown>true</tns:drilldown>
				<tns:wherecondition></tns:wherecondition>
				<tns:vendor>n</tns:vendor>
				<tns:region>n</tns:region>
				<tns:granularity>n</tns:granularity>
			</tns:filterbar>
			<xsl:apply-templates />
		</tns:Dashboard>
	</xsl:template>

	<xsl:template
		match="dvr:ReportWidget[dvr:widget[@xsi:type='StackBarHorizWidget']]">
		<!-- Handle StackBarHoriz nodes here - can refer to mediator and widget 
			child in source -->
		 <tns:widgets>
			<tns:id>widget1</tns:id>
			<tns:type>Pie</tns:type><!-- TO DO - confirm value -->
			<tns:rowspan>1</tns:rowspan>
			<tns:colspan>1</tns:colspan>
			<tns:xpos>0</tns:xpos> <!-- TO DO -->
			<tns:ypos>0</tns:ypos><!-- TO DO -->
			<tns:toolbar>
				<tns:isMaster>false</tns:isMaster> <!-- TO DO -->
				<tns:chartFamily>circular</tns:chartFamily>
				<tns:title>
					<xsl:value-of select="dvr:widget/title/text" />
				</tns:title> <!-- TO DO -->
			</tns:toolbar>
			<tns:style>height: 200px;</tns:style>
			<tns:colorRangeId>tnpm7</tns:colorRangeId>
			<tns:plots>				
					<tns:radius>90</tns:radius>
					<tns:markers>true</tns:markers>
					<tns:labels>false</tns:labels>
			</tns:plots>			
			<tns:series>				
				<tns:name>metricName</tns:name> 
				<tns:store>widget1Store</tns:store>
				<tns:value>item.resourceCount</tns:value><!-- TO DO -->
				<tns:label>item.metricName</tns:label><!-- TO DO -->
			</tns:series>
			<tns:chartIdentity>
				<!-- <tns:chartId> -->
					<tns:name>widget1</tns:name> <!-- TO DO JSON internal ID for widget? -->
					<tns:drilldowntype>masterlistener</tns:drilldowntype> <!-- TO DO DV will need drill down to another dashboard -->
					<tns:type>master</tns:type> <!-- TO DO is it manadatory? If so what all other values -->
					<tns:parameter>item.resourceCount</tns:parameter>  <!-- For drill down to other report, need to pass Metric Range as parameter to next report -->
				<!-- </tns:chartId> -->
			</tns:chartIdentity>
			<tns:legend>
				<tns:type>circularinteractive</tns:type>
				<tns:style>margin: 10px;</tns:style>
			</tns:legend>
			<tns:tooltip>true</tns:tooltip>
		</tns:widgets> 
	</xsl:template>

	<xsl:template
		match="dvr:ReportWidget[dvr:widget[@xsi:type='GstTableWidget']]">
		<!-- Handle GSTTable nodes here - can refer to mediator and widget child 
			in source -->

		<tns:widgets> 
			<tns:id>widget2</tns:id>
			<tns:type>Grid</tns:type>
			<tns:rowspan>1</tns:rowspan>
			<tns:colspan>2</tns:colspan>
			<tns:xpos>0</tns:xpos>
			<tns:ypos>1</tns:ypos>
			<tns:toolbar>
				<tns:isMaster>true</tns:isMaster>
				<tns:title>Widget 3 Title</tns:title>
			</tns:toolbar>
			<tns:style>height: 300px;</tns:style>
			<tns:properties>
				<!-- <tns:property> -->
					<tns:title></tns:title>
					<tns:primaryKey>region</tns:primaryKey>
					<tns:dataStore>widget3Store</tns:dataStore>
				<!-- </tns:property> -->
			</tns:properties>
			<xsl:for-each select="dvr:widget/dvr:formula">
			<xsl:variable name="columnLabel" select="dvr:metricFormat/dvr:label/text()"/>
				<xsl:for-each select="../../dvr:mediator/dvr:formula[dvr:formulaId/text()=current()/dvr:formulaId/text()]/dvr:stats/dvr:stat">
					<xsl:variable name="metricId" select="../../dvr:metric/text()"/>
					<xsl:variable name="statName" select="./text()"/>
					<xsl:variable name="fieldName" select="concat('mid',$metricId,'-',./text())"/>
					<tns:columns>
						<tns:name><xsl:value-of select="concat($columnLabel,'-',$statName)"/></tns:name>
						<tns:id><xsl:value-of select="$fieldName"/></tns:id>
						<tns:field><xsl:value-of select="$fieldName"/></tns:field>
					</tns:columns>
				</xsl:for-each>
			</xsl:for-each>
			<tns:chartIdentity>
				<!-- <tns:chartId> -->
					<tns:class>grid</tns:class>
					<tns:drilldowntype>master</tns:drilldowntype>
					<tns:type>listener</tns:type>
					<tns:parameter>drilldownParam</tns:parameter>
					<tns:master>widget1</tns:master>
				<!-- </tns:chartId> -->
			</tns:chartIdentity>
		</tns:widgets>

	</xsl:template>

	<xsl:template
		match="dvr:ReportWidget[dvr:widget[@xsi:type='RstTableWidget']]">
		<!-- Handle RSTTable nodes here - can refer to mediator and widget child 
			in source -->
		<tns:widgets> 
			<tns:id>widget2</tns:id> <!-- TO DO -->
			<tns:type>Grid</tns:type> <!--  TO DO -->
			<tns:rowspan>1</tns:rowspan> <!-- TO DO -->
			<tns:colspan>2</tns:colspan> <!--  TO DO -->
			<tns:xpos>0</tns:xpos> <!--  TO DO -->
			<tns:ypos>1</tns:ypos> <!-- TO DO -->
			<tns:toolbar>
				<tns:isMaster>false</tns:isMaster>
				<tns:title><xsl:value-of select="title/text"> </xsl:value-of></tns:title> 
			</tns:toolbar>
			<tns:style>height: 300px;</tns:style>
			<tns:properties>
				<!-- <tns:property> -->
					<tns:title></tns:title> 
					<tns:primaryKey>region</tns:primaryKey>
					<tns:dataStore>widget3Store</tns:dataStore> 
				<!-- </tns:property> -->
			</tns:properties>
			<tns:columns>
			<!-- TO DO Via loop using metrics / formula in mediator for table -->
				<tns:column>
					<tns:name>Column_1_Name</tns:name>
					<tns:id>Column_1_ID</tns:id>
					<tns:field>Column_1_Mapping</tns:field>
				</tns:column>
				<tns:column>
					<tns:name>Column_2_Name</tns:name>
					<tns:id>Column_2_ID</tns:id>
					<tns:field>Column_2_Mapping</tns:field>
				</tns:column>
				<tns:column>
					<tns:name>Column_3_Name</tns:name>
					<tns:id>Column_3_ID</tns:id>
					<tns:field>Column_3_Mapping</tns:field>
				</tns:column>
			</tns:columns>

			<tns:chartIdentity>
				<!-- <tns:chartId> -->
					<tns:class>grid</tns:class>
					<tns:drilldowntype>master</tns:drilldowntype> 
					<tns:type>listener</tns:type> 
					<tns:parameter>drilldownParam</tns:parameter> 
					<tns:master>widget1</tns:master>
				<!-- </tns:chartId> -->
			</tns:chartIdentity>
		</tns:widgets>
	</xsl:template>

	<!-- standard copy template -->
	<xsl:template match="@*|node()">
		<xsl:copy>
			<xsl:apply-templates select="@*" />
			<xsl:apply-templates />
		</xsl:copy>
	</xsl:template>

</xsl:stylesheet>