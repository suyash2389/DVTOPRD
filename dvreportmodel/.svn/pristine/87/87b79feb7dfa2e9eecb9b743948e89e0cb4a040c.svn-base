//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.4-2 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2018.03.30 at 06:25:45 PM IST 
//


package com.ibm.csi.npm.dvreportmodel;

import javax.xml.bind.JAXBElement;
import javax.xml.bind.annotation.XmlElementDecl;
import javax.xml.bind.annotation.XmlRegistry;
import javax.xml.namespace.QName;


/**
 * This object contains factory methods for each 
 * Java content interface and Java element interface 
 * generated in the com.ibm.csi.npm.dvreportmodel package. 
 * <p>An ObjectFactory allows you to programatically 
 * construct new instances of the Java representation 
 * for XML content. The Java representation of XML 
 * content can consist of schema derived interfaces 
 * and classes representing the binding of schema 
 * type definitions, element declarations and model 
 * groups.  Factory methods for each of these are 
 * provided in this class.
 * 
 */
@XmlRegistry
public class ObjectFactory {

    private final static QName _FormulaId_QNAME = new QName("http://www.ibm.com/csi/npm/dvreportermodel", "formulaId");
    private final static QName _Reporter_QNAME = new QName("http://www.ibm.com/csi/npm/dvreportermodel", "reporter");

    /**
     * Create a new ObjectFactory that can be used to create new instances of schema derived classes for package: com.ibm.csi.npm.dvreportmodel
     * 
     */
    public ObjectFactory() {
    }

    /**
     * Create an instance of {@link Reporter }
     * 
     */
    public Reporter createReporter() {
        return new Reporter();
    }

    /**
     * Create an instance of {@link DistributionBarChartWidget }
     * 
     */
    public DistributionBarChartWidget createDistributionBarChartWidget() {
        return new DistributionBarChartWidget();
    }

    /**
     * Create an instance of {@link RptTableMediator }
     * 
     */
    public RptTableMediator createRptTableMediator() {
        return new RptTableMediator();
    }

    /**
     * Create an instance of {@link Drilldown }
     * 
     */
    public Drilldown createDrilldown() {
        return new Drilldown();
    }

    /**
     * Create an instance of {@link MetricFormatWithTH }
     * 
     */
    public MetricFormatWithTH createMetricFormatWithTH() {
        return new MetricFormatWithTH();
    }

    /**
     * Create an instance of {@link ResDistribMediator }
     * 
     */
    public ResDistribMediator createResDistribMediator() {
        return new ResDistribMediator();
    }

    /**
     * Create an instance of {@link TableGroup }
     * 
     */
    public TableGroup createTableGroup() {
        return new TableGroup();
    }

    /**
     * Create an instance of {@link SumRow }
     * 
     */
    public SumRow createSumRow() {
        return new SumRow();
    }

    /**
     * Create an instance of {@link RstTableMediator }
     * 
     */
    public RstTableMediator createRstTableMediator() {
        return new RstTableMediator();
    }

    /**
     * Create an instance of {@link Property }
     * 
     */
    public Property createProperty() {
        return new Property();
    }

    /**
     * Create an instance of {@link BusyHours }
     * 
     */
    public BusyHours createBusyHours() {
        return new BusyHours();
    }

    /**
     * Create an instance of {@link UpgradeConditionLabels }
     * 
     */
    public UpgradeConditionLabels createUpgradeConditionLabels() {
        return new UpgradeConditionLabels();
    }

    /**
     * Create an instance of {@link TableFormula }
     * 
     */
    public TableFormula createTableFormula() {
        return new TableFormula();
    }

    /**
     * Create an instance of {@link ForcastDate }
     * 
     */
    public ForcastDate createForcastDate() {
        return new ForcastDate();
    }

    /**
     * Create an instance of {@link Mediator }
     * 
     */
    public Mediator createMediator() {
        return new Mediator();
    }

    /**
     * Create an instance of {@link StackAreaChartWidget }
     * 
     */
    public StackAreaChartWidget createStackAreaChartWidget() {
        return new StackAreaChartWidget();
    }

    /**
     * Create an instance of {@link Setting }
     * 
     */
    public Setting createSetting() {
        return new Setting();
    }

    /**
     * Create an instance of {@link UpgradeCondition }
     * 
     */
    public UpgradeCondition createUpgradeCondition() {
        return new UpgradeCondition();
    }

    /**
     * Create an instance of {@link RSTTableResource }
     * 
     */
    public RSTTableResource createRSTTableResource() {
        return new RSTTableResource();
    }

    /**
     * Create an instance of {@link RealTimeParameters }
     * 
     */
    public RealTimeParameters createRealTimeParameters() {
        return new RealTimeParameters();
    }

    /**
     * Create an instance of {@link Value }
     * 
     */
    public Value createValue() {
        return new Value();
    }

    /**
     * Create an instance of {@link SourceDestination }
     * 
     */
    public SourceDestination createSourceDestination() {
        return new SourceDestination();
    }

    /**
     * Create an instance of {@link ThValue }
     * 
     */
    public ThValue createThValue() {
        return new ThValue();
    }

    /**
     * Create an instance of {@link MatrixMediator }
     * 
     */
    public MatrixMediator createMatrixMediator() {
        return new MatrixMediator();
    }

    /**
     * Create an instance of {@link Display }
     * 
     */
    public Display createDisplay() {
        return new Display();
    }

    /**
     * Create an instance of {@link Hint }
     * 
     */
    public Hint createHint() {
        return new Hint();
    }

    /**
     * Create an instance of {@link TableFormulaWithoutTH }
     * 
     */
    public TableFormulaWithoutTH createTableFormulaWithoutTH() {
        return new TableFormulaWithoutTH();
    }

    /**
     * Create an instance of {@link ChartWidget }
     * 
     */
    public ChartWidget createChartWidget() {
        return new ChartWidget();
    }

    /**
     * Create an instance of {@link GTSNearRealTime }
     * 
     */
    public GTSNearRealTime createGTSNearRealTime() {
        return new GTSNearRealTime();
    }

    /**
     * Create an instance of {@link ChartOtherLabel }
     * 
     */
    public ChartOtherLabel createChartOtherLabel() {
        return new ChartOtherLabel();
    }

    /**
     * Create an instance of {@link GstTableWidget }
     * 
     */
    public GstTableWidget createGstTableWidget() {
        return new GstTableWidget();
    }

    /**
     * Create an instance of {@link BaselineChartWidget }
     * 
     */
    public BaselineChartWidget createBaselineChartWidget() {
        return new BaselineChartWidget();
    }

    /**
     * Create an instance of {@link TableMediator }
     * 
     */
    public TableMediator createTableMediator() {
        return new TableMediator();
    }

    /**
     * Create an instance of {@link BaselineMediator }
     * 
     */
    public BaselineMediator createBaselineMediator() {
        return new BaselineMediator();
    }

    /**
     * Create an instance of {@link TableFormulaWithTh }
     * 
     */
    public TableFormulaWithTh createTableFormulaWithTh() {
        return new TableFormulaWithTh();
    }

    /**
     * Create an instance of {@link TableMediatorSort }
     * 
     */
    public TableMediatorSort createTableMediatorSort() {
        return new TableMediatorSort();
    }

    /**
     * Create an instance of {@link MatrixMediatorThreshold }
     * 
     */
    public MatrixMediatorThreshold createMatrixMediatorThreshold() {
        return new MatrixMediatorThreshold();
    }

    /**
     * Create an instance of {@link Granularity }
     * 
     */
    public Granularity createGranularity() {
        return new Granularity();
    }

    /**
     * Create an instance of {@link RankVariationTableWidget }
     * 
     */
    public RankVariationTableWidget createRankVariationTableWidget() {
        return new RankVariationTableWidget();
    }

    /**
     * Create an instance of {@link Widget }
     * 
     */
    public Widget createWidget() {
        return new Widget();
    }

    /**
     * Create an instance of {@link ThViolationTableWidget }
     * 
     */
    public ThViolationTableWidget createThViolationTableWidget() {
        return new ThViolationTableWidget();
    }

    /**
     * Create an instance of {@link TableWidget }
     * 
     */
    public TableWidget createTableWidget() {
        return new TableWidget();
    }

    /**
     * Create an instance of {@link ChartMetricLabel }
     * 
     */
    public ChartMetricLabel createChartMetricLabel() {
        return new ChartMetricLabel();
    }

    /**
     * Create an instance of {@link RankVariationChartWidget }
     * 
     */
    public RankVariationChartWidget createRankVariationChartWidget() {
        return new RankVariationChartWidget();
    }

    /**
     * Create an instance of {@link GstTableMediator }
     * 
     */
    public GstTableMediator createGstTableMediator() {
        return new GstTableMediator();
    }

    /**
     * Create an instance of {@link Trending }
     * 
     */
    public Trending createTrending() {
        return new Trending();
    }

    /**
     * Create an instance of {@link LeafDrilldown }
     * 
     */
    public LeafDrilldown createLeafDrilldown() {
        return new LeafDrilldown();
    }

    /**
     * Create an instance of {@link Properties }
     * 
     */
    public Properties createProperties() {
        return new Properties();
    }

    /**
     * Create an instance of {@link TopNMediator }
     * 
     */
    public TopNMediator createTopNMediator() {
        return new TopNMediator();
    }

    /**
     * Create an instance of {@link ChartPropertiesLabel }
     * 
     */
    public ChartPropertiesLabel createChartPropertiesLabel() {
        return new ChartPropertiesLabel();
    }

    /**
     * Create an instance of {@link MatrixTableWidget }
     * 
     */
    public MatrixTableWidget createMatrixTableWidget() {
        return new MatrixTableWidget();
    }

    /**
     * Create an instance of {@link RealTimeParameter }
     * 
     */
    public RealTimeParameter createRealTimeParameter() {
        return new RealTimeParameter();
    }

    /**
     * Create an instance of {@link Threshold }
     * 
     */
    public Threshold createThreshold() {
        return new Threshold();
    }

    /**
     * Create an instance of {@link MatrixDrilldown }
     * 
     */
    public MatrixDrilldown createMatrixDrilldown() {
        return new MatrixDrilldown();
    }

    /**
     * Create an instance of {@link BarHorizWidget }
     * 
     */
    public BarHorizWidget createBarHorizWidget() {
        return new BarHorizWidget();
    }

    /**
     * Create an instance of {@link PieChartWidget }
     * 
     */
    public PieChartWidget createPieChartWidget() {
        return new PieChartWidget();
    }

    /**
     * Create an instance of {@link TimeSeriesMediator }
     * 
     */
    public TimeSeriesMediator createTimeSeriesMediator() {
        return new TimeSeriesMediator();
    }

    /**
     * Create an instance of {@link ViolationType }
     * 
     */
    public ViolationType createViolationType() {
        return new ViolationType();
    }

    /**
     * Create an instance of {@link MeticsFormat }
     * 
     */
    public MeticsFormat createMeticsFormat() {
        return new MeticsFormat();
    }

    /**
     * Create an instance of {@link UpgradeForcastCondition }
     * 
     */
    public UpgradeForcastCondition createUpgradeForcastCondition() {
        return new UpgradeForcastCondition();
    }

    /**
     * Create an instance of {@link TopNTable }
     * 
     */
    public TopNTable createTopNTable() {
        return new TopNTable();
    }

    /**
     * Create an instance of {@link RttMediator }
     * 
     */
    public RttMediator createRttMediator() {
        return new RttMediator();
    }

    /**
     * Create an instance of {@link WidgetConfig }
     * 
     */
    public WidgetConfig createWidgetConfig() {
        return new WidgetConfig();
    }

    /**
     * Create an instance of {@link RptTableWidget }
     * 
     */
    public RptTableWidget createRptTableWidget() {
        return new RptTableWidget();
    }

    /**
     * Create an instance of {@link Title }
     * 
     */
    public Title createTitle() {
        return new Title();
    }

    /**
     * Create an instance of {@link RstTableWidget }
     * 
     */
    public RstTableWidget createRstTableWidget() {
        return new RstTableWidget();
    }

    /**
     * Create an instance of {@link ChartRange }
     * 
     */
    public ChartRange createChartRange() {
        return new ChartRange();
    }

    /**
     * Create an instance of {@link MatricMediatorFormula }
     * 
     */
    public MatricMediatorFormula createMatricMediatorFormula() {
        return new MatricMediatorFormula();
    }

    /**
     * Create an instance of {@link ChartMediator }
     * 
     */
    public ChartMediator createChartMediator() {
        return new ChartMediator();
    }

    /**
     * Create an instance of {@link AreaChartWidget }
     * 
     */
    public AreaChartWidget createAreaChartWidget() {
        return new AreaChartWidget();
    }

    /**
     * Create an instance of {@link RankVariationMediator }
     * 
     */
    public RankVariationMediator createRankVariationMediator() {
        return new RankVariationMediator();
    }

    /**
     * Create an instance of {@link RatioMediator }
     * 
     */
    public RatioMediator createRatioMediator() {
        return new RatioMediator();
    }

    /**
     * Create an instance of {@link Baseline }
     * 
     */
    public Baseline createBaseline() {
        return new Baseline();
    }

    /**
     * Create an instance of {@link TableMediatorFormula }
     * 
     */
    public TableMediatorFormula createTableMediatorFormula() {
        return new TableMediatorFormula();
    }

    /**
     * Create an instance of {@link Stats }
     * 
     */
    public Stats createStats() {
        return new Stats();
    }

    /**
     * Create an instance of {@link StackBarHorizWidget }
     * 
     */
    public StackBarHorizWidget createStackBarHorizWidget() {
        return new StackBarHorizWidget();
    }

    /**
     * Create an instance of {@link CustomLabels }
     * 
     */
    public CustomLabels createCustomLabels() {
        return new CustomLabels();
    }

    /**
     * Create an instance of {@link TableMediatorGroup }
     * 
     */
    public TableMediatorGroup createTableMediatorGroup() {
        return new TableMediatorGroup();
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://www.ibm.com/csi/npm/dvreportermodel", name = "formulaId")
    public JAXBElement<String> createFormulaId(String value) {
        return new JAXBElement<String>(_FormulaId_QNAME, String.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link Reporter }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://www.ibm.com/csi/npm/dvreportermodel", name = "reporter")
    public JAXBElement<Reporter> createReporter(Reporter value) {
        return new JAXBElement<Reporter>(_Reporter_QNAME, Reporter.class, null, value);
    }

}
